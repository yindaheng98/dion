syntax = "proto3";

import "github.com/pion/ion/proto/ion/ion.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/yindaheng98/isglb/proto";

package islb;

service ISGLB {
  // When forward path changed, upload the SFUStatus from client to ISGLB
  // When forward path should change, send expected SFUStatus from ISGLB to client
  rpc SyncSFUStatus(stream SFUStatus) returns (stream SFUStatus) {}

  // Report the communication quality or computation quality of the edge
  rpc QualityReport(stream Report) returns (stream SFUStatus) {} // TODO: just need one API
}

// The track with id `trackId` from `src` node was/should forwarded
message ForwardTrack {
  ion.Node src = 1;
  string trackId = 2; // The same video/audio has the same track id in different nodes
}

// The track with id `srcTrackId` in the current node was/should proceeded and output track's name is `dstTrackId`
message ProceedTrack {
  string srcTrackId = 1;
  string dstTrackId = 2;
}

// Which session do the client need. May be a lot of track in one session
message ClientNeededSession {
  string session = 1;
}

// TODO: move SFUStatus to SFU module
message SFUStatus {
  ion.Node SFU = 1;
  repeated ForwardTrack forwardTracks = 2;
  repeated ProceedTrack proceedTracks = 3;
  repeated ClientNeededSession clientNeededSession = 4;
}

message EdgeReport {
  ion.Node from = 1;
  google.protobuf.Any report = 2; //TODO: Add a more specific Report type
}

message NodeReport {
  google.protobuf.Any report = 2; //TODO: Add a more specific Report type
}

message Report {
  ion.Node node = 1;
  oneof report{
    EdgeReport edgeReport = 2;
    NodeReport nodeReport = 3;
  }
}